Secure Client-Server File Storage (Java)

A secure client-server application for storing and retrieving files remotely. Built in Java with hybrid encryption using AES, RSA, and MACs. Handles user authentication and key management with Java Keystores.

---

Tech Stack

- Java
- Java Sockets (TCP)
- Java Keystores
- Cryptography: AES, RSA, MACs

---

Features

- Client-server architecture with socket communication
- Encrypted file upload/download using hybrid cryptography
- Authentication using secure credentials
- Key storage and handling via Java Keystores
- End-to-end encryption per workspace access

---

How to Run

1. Clone the repo:

```bash
git clone https://github.com/GuilhermeMD10/secure-file-transfer-aes-rsa.git
cd secure-client-server-java
```

2. Compile the server and client:

chmod +x build.sh
./build.sh
```

3. Start the server:
```bash
java -jar mySharingServer.jar
```

4. In a separate terminal, start the client:
```bash
java -jar mySharingClient.jar <ip ou localhost...> <user...> <pass do user...>
```

---

## üìÅ Project Structure

```
/java files
/server
/user1...3
/keystores
```

---

